#!/bin/sh

# download and install vault
echo Installing Vault
sleep 30
sudo yum install -y yum-utils
sudo yum-config-manager --add-repo https://rpm.releases.hashicorp.com/AmazonLinux/hashicorp.repo
sudo yum install -y vault-enterprise-1.15.5+ent-1
sudo yum -y install mysql jq docker openldap openldap-clients

# Run the LDAP container
systemctl enable docker
systemctl start docker

docker run --detach --rm -p 1389:1389 -p 1636:1636 --name openldap \
  --env LDAP_ADMIN_USERNAME=admin \
  --env LDAP_ADMIN_PASSWORD=${ldap_pass} \
  --env LDAP_ROOT=dc=boundary,dc=lab \
  --env LDAP_ADMIN_DN=cn=admin,dc=boundary,dc=lab \
  --env LDAP_SKIP_DEFAULT_TREE=yes \
  bitnami/openldap:2.6.7

# Load the LDAP Container

cat <<EOF > /tmp/users.ldif
dn: dc=boundary,dc=lab
changetype: add
objectClass: dcObject
objectClass: organization
dc: boundary
o: HCP

dn: ou=users,dc=boundary,dc=lab
changetype: add
objectClass: organizationalUnit
ou: users

dn: cn=global_user,ou=users,dc=boundary,dc=lab
changetype: add
cn: global_user
sn: Global
objectClass: inetOrgPerson
userPassword: ${ldap_pass}
mail: global_user@boundary.lab
uid: global_user

dn: cn=pie_user,ou=users,dc=boundary,dc=lab
changetype: add
cn: pie_user
sn: PIE
objectClass: inetOrgPerson
userPassword: ${ldap_pass}
mail: pie_user@boundary.lab
uid: pie_user

dn: cn=dev_user,ou=users,dc=boundary,dc=lab
changetype: add
cn: dev_user
sn: Dev
objectClass: inetOrgPerson
userPassword: ${ldap_pass}
mail: dev_user@boundary.lab
uid: dev_user

dn: cn=it_user,ou=users,dc=boundary,dc=lab
changetype: add
cn: it_user
sn: IT
objectClass: inetOrgPerson
userPassword: ${ldap_pass}
mail: it_user@boundary.lab
uid: it_user

dn: cn=pie_group,ou=users,dc=boundary,dc=lab
changetype: add
cn: pie_group
objectClass: groupOfNames
member: cn=pie_user,ou=users,dc=boundary,dc=lab
member: cn=global_user,ou=users,dc=boundary,dc=lab

dn: cn=dev_group,ou=users,dc=boundary,dc=lab
changetype: add
cn: dev_group
objectClass: groupOfNames
member: cn=dev_user,ou=users,dc=boundary,dc=lab
member: cn=global_user,ou=users,dc=boundary,dc=lab

dn: cn=it_group,ou=users,dc=boundary,dc=lab
changetype: add
cn: it_group
objectClass: groupOfNames
member: cn=it_user,ou=users,dc=boundary,dc=lab
member: cn=global_user,ou=users,dc=boundary,dc=lab
EOF

sleep 3

ldapmodify -x -h 127.0.0.1 -p 1389 -D cn=admin,dc=boundary,dc=lab -w ${ldap_pass} -f /tmp/users.ldif

# prevent memory from being swapped to disk without running the process as root
sudo setcap cap_ipc_lock=+ep /usr/bin/vault

# create the vault.d directory in /etc
sudo mkdir --parents /etc/vault.d

# Add Vault config file
cat <<EOF > /etc/vault.d/vault.hcl
ui = true

listener "tcp" {
 address     = "0.0.0.0:8200"
 tls_disable = "true"
}

storage "raft" {
  path = "/home/vault/data"
  node_id = "raft_node_1"
}

cluster_addr = "http://127.0.0.1:8201"
api_addr = "http://127.0.0.1:8200"
EOF

cat <<EOF > /etc/systemd/system/vault.service
[Unit]
Description="HashiCorp Vault - A tool for managing secrets"
Documentation=https://www.vaultproject.io/docs/
Requires=network-online.target
After=network-online.target
ConditionFileNotEmpty=/etc/vault.d/vault.hcl
StartLimitIntervalSec=60
StartLimitBurst=3

[Service]
User=vault
Group=vault
ProtectSystem=full
PrivateTmp=yes
PrivateDevices=yes
SecureBits=keep-caps
AmbientCapabilities=CAP_IPC_LOCK
Capabilities=CAP_IPC_LOCK+ep
CapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK
NoNewPrivileges=yes
ExecStart=/usr/bin/vault server -config=/etc/vault.d/vault.hcl
ExecReload=/bin/kill --signal HUP $MAINPID
KillMode=process
KillSignal=SIGINT
Restart=on-failure
RestartSec=5
TimeoutStopSec=30
StartLimitInterval=60
LimitNOFILE=65536
LimitMEMLOCK=infinity
Environment="VAULT_LICENSE=${vault_license}"
[Install]
WantedBy=multi-user.target
EOF

# give ownership of everything in the vault.d directory to the vault user
sudo chown --recursive vault:vault /etc/vault.d

# give read/write access to the vault.hcl file
sudo chown 640 /etc/vault.d/vault.hcl
sudo mkdir /home/vault
sudo mkdir /home/vault/data
sudo chown --recursive vault:vault /home/vault/


export VAULT_ADDR='http://127.0.0.1:8200'

# enable and start the vault server
sudo systemctl enable vault
sudo systemctl start vault
sleep 10 

# Unseal Vault 

VAULT_INIT_OUTPUT=$(vault operator init -key-shares 1 -key-threshold 1 -format json)

vault operator unseal $(echo $VAULT_INIT_OUTPUT | jq -r '.unseal_keys_b64[0]')

echo "VAULT_ADDR=http://127.0.0.1:8200" > /etc/vault.d/vault.env

export VAULT_TOKEN=$(echo $VAULT_INIT_OUTPUT | jq '.root_token' | tr -d "'\"")

cat <<EOF > /tmp/admin.hcl
path "*"
{
  capabilities = ["create", "read", "update", "delete", "list", "sudo"]
}
EOF

vault auth enable userpass
vault policy write admin /tmp/admin.hcl
vault write auth/userpass/users/terraform password=${vaultpass} token_policies=admin token_no_default_policy=true